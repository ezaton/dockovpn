name: Docker Multi-Platform Build

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 2 * * 1'  # Run weekly to check for Alpine updates
  workflow_dispatch:

jobs:
  check-alpine:
    runs-on: ubuntu-latest
    outputs:
      alpine_version: ${{ steps.get-alpine.outputs.version }}
      version: ${{ steps.get-version.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get Alpine version
        id: get-alpine
        run: |
          docker pull alpine:latest
          VERSION=$(docker run --rm alpine:latest grep ^VERSION /etc/os-release | cut -f 2 -d =)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Generate full version
        id: get-version
        run: |
          FULL_VERSION="$(cat ./VERSION)_ALP${{ steps.get-alpine.outputs.version }}"
          echo "version=$FULL_VERSION" >> $GITHUB_OUTPUT

  build:
    needs: check-alpine
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [x86_64, arm64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push platform-specific image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/${{ matrix.platform == 'x86_64' && 'amd64' || 'arm64' }}
          push: true
          tags: |
            etzion/openvpn-${{ matrix.platform }}:latest
            etzion/openvpn-${{ matrix.platform }}:${{ needs.check-alpine.outputs.version }}

  create-manifest:
    needs: [check-alpine, build]
    runs-on: ubuntu-latest
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Create and push manifest
        run: |
          # Create and push latest manifest
          docker manifest create --amend \
            etzion/openvpn:latest \
            etzion/openvpn-arm64:latest \
            etzion/openvpn-x86_64:latest
          docker manifest push etzion/openvpn:latest

          # Create and push versioned manifest
          docker manifest create --amend \
            etzion/openvpn:${{ needs.check-alpine.outputs.version }} \
            etzion/openvpn-arm64:${{ needs.check-alpine.outputs.version }} \
            etzion/openvpn-x86_64:${{ needs.check-alpine.outputs.version }}
          docker manifest push etzion/openvpn:${{ needs.check-alpine.outputs.version }}
